name: build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        target:
          - windows
          - macos
        include:
          - target: windows
            os: windows-latest
          - target: macos
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install . pyinstaller

      - run: pyinstaller bin/_gl2f.py --onefile --name gl2f
      - run: pyinstaller bin/_gl2b.py --onefile --name gl2b
      - run: pyinstaller bin/_gl2r.py --onefile --name gl2r
      - run: pyinstaller bin/_gl2n.py --onefile --name gl2n

      - name: package for windows
        if: matrix.os == 'windows-latest'
        run: powershell Compress-Archive -Path .\dist\* -DestinationPath ${{ matrix.target }}.zip

      - name: package for macos
        if: matrix.os == 'macos-latest'
        run: zip ${{ matrix.target }}.zip ./dist/*

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: dist

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - run: echo '${{ steps.create_release.outputs.upload_url }}' > release_upload_url

      - uses: actions/upload-artifact@v1
        with:
          name: url
          path: release_upload_url

  upload:
    strategy:
      matrix:
        target:
          - windows
          - macos

    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: url

      - id: upload_url
        run: echo "::set-output name=url::$(cat url/release_upload_url)"

      - uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.target }}

      - run: ls -R

      - run: zip ${{ matrix.target }}.zip ${{ matrix.target }}/*

      - run: ls -R

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.url }}
          asset_path: ${{ matrix.target }}.zip
          asset_name: ${{ matrix.target }}.zip
          asset_content_type: application/zip